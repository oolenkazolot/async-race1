(()=>{"use strict";var t=function(t,e,n,i){return new(n||(n=Promise))((function(a,r){function c(t){try{s(i.next(t))}catch(t){r(t)}}function o(t){try{s(i.throw(t))}catch(t){r(t)}}function s(t){var e;t.done?a(t.value):(e=t.value,e instanceof n?e:new n((function(t){t(e)}))).then(c,o)}s((i=i.apply(t,e||[])).next())}))};const e=class{getAutosAll(){return t(this,void 0,void 0,(function*(){try{const t=yield fetch("http://127.0.0.1:3000/garage");return yield t.json()}catch(t){console.log(t)}}))}getAutos(e,n){return t(this,void 0,void 0,(function*(){try{const t=yield fetch(`http://127.0.0.1:3000/garage/?_page=${e}&_limit=${n}`),i=t.headers.get("X-Total-Count");return{autos:yield t.json(),countCars:Number(i)}}catch(t){console.log(t)}}))}getAutosId(e,n){return t(this,void 0,void 0,(function*(){try{const t=yield fetch(`http://127.0.0.1:3000/garage/?_page=${e}&_limit=${n}`),i=yield t.json();if(i)return i}catch(t){console.log(t)}}))}createCar(e,n){return t(this,void 0,void 0,(function*(){console.log(e);try{const t=yield fetch("http://127.0.0.1:3000/garage",{method:"POST",headers:{"Content-Type":"application/json"},body:JSON.stringify({name:e,color:n})}),i=yield t.json();if(i)return i}catch(t){console.log(t)}}))}deleteCar(e){return t(this,void 0,void 0,(function*(){try{const t=yield fetch(`http://127.0.0.1:3000/garage/${e}`,{method:"DELETE"});yield t.json()}catch(t){console.log(t)}}))}startCarEngine(e){return t(this,void 0,void 0,(function*(){try{const t=yield fetch(`http://127.0.0.1:3000/engine/?id=${e}&status=started`,{method:"PATCH"});return yield t.json()}catch(t){console.log(t)}}))}startEngineDrive(e){return t(this,void 0,void 0,(function*(){try{const t=yield fetch(`http://127.0.0.1:3000/engine/?id=${e}&status=drive`,{method:"PATCH"});if(500===t.status)throw new Error("Car has been stopped suddenly. It's engine was broken down.");const n=yield t.json();if(n)return n}catch(t){this.stopCarEngine(e),t instanceof Error&&console.log(t.message)}}))}stopCarEngine(e){return t(this,void 0,void 0,(function*(){try{const t=yield fetch(`http://127.0.0.1:3000/engine/?id=${e}&status=stopped`,{method:"PATCH"});yield t.json()}catch(t){console.log(t)}}))}updateCar(e,n,i){return t(this,void 0,void 0,(function*(){try{const t=yield fetch(`http://127.0.0.1:3000/garage/${e}`,{method:"PUT",headers:{"Content-Type":"application/json"},body:JSON.stringify({name:n,color:i})}),a=yield t.json();if(a)return a;console.log(a)}catch(t){console.log(t)}}))}startEngine(e){return t(this,void 0,void 0,(function*(){const t=yield this.startCarEngine(e);if(t)return t.distance/t.velocity}))}startDrive(e){return t(this,void 0,void 0,(function*(){return!!(yield this.startEngineDrive(e))}))}startCar(e,n,i,a){return t(this,void 0,void 0,(function*(){n.disabled=!0,i.disabled=!1;const t=yield this.startCarEngine(e.id);if(!t)return;let r;const c=document.getElementById(e.id.toString());if(c){c.classList.add("animation-active"),c.style.animationDuration=t.distance/t.velocity/1e3+"s";const n=t.distance/t.velocity;a&&(r=setTimeout((()=>{console.log(e.name),a(e.id,e.name,Math.round(n/10)/100)}),n))}if(!(yield this.startEngineDrive(e.id))&&(clearTimeout(r),c)){const t=c.getBoundingClientRect().left;c.style.left=t+"px",c.classList.remove("animation-active")}}))}stopCar(e,n,i){return t(this,void 0,void 0,(function*(){yield this.stopCarEngine(e.id);const t=document.getElementById(e.id.toString());t&&(t.classList.remove("animation-active"),t.style.left="5%"),n.disabled=!1,i.disabled=!0}))}createWinner(e,n){return t(this,void 0,void 0,(function*(){const t=yield this.getWinnersAll();if(!t)return;const i=t.find((t=>t.id===e));if(i){const t=i.time>n?i.time:n,e=i.wins+1;this.updateWinner(i.id,e,t)}else try{const t=yield fetch("http://127.0.0.1:3000/winners",{method:"POST",headers:{"Content-Type":"application/json"},body:JSON.stringify({id:e,wins:1,time:n})}),i=yield t.json();if(i)return i}catch(t){console.log(t)}}))}getWinnersAll(){return t(this,void 0,void 0,(function*(){try{const t=yield fetch("http://127.0.0.1:3000/winners",{method:"GET"}),e=yield t.json();if(e)return e}catch(t){console.log(t)}}))}getWinners(e,n,i,a){return t(this,void 0,void 0,(function*(){try{const t=i?`&_sort=${i}&_order=${a}`:"",r=yield fetch(`http://127.0.0.1:3000/winners?_page=${e}&_limit=${n}${t}`,{}),c=r.headers.get("X-Total-Count");return{winners:yield r.json(),countWinners:Number(c)}}catch(t){console.log(t)}}))}updateWinner(e,n,i){return t(this,void 0,void 0,(function*(){try{const t=yield fetch(`http://127.0.0.1:3000/winners/${e}`,{method:"PUT",headers:{"Content-Type":"application/json"},body:JSON.stringify({wins:n,time:i})}),a=yield t.json();if(a)return a}catch(t){console.log(t)}}))}deleteWinner(e){return t(this,void 0,void 0,(function*(){try{const t=yield fetch(`http://127.0.0.1:3000/winners/${e}`,{method:"DELETE"});yield t.json()}catch(t){console.log(t)}}))}},n=class{createBtn(t,e,n,i){const a=document.createElement("button");return a.classList.add(t),a.classList.add(e),i&&a.classList.add(i),a.textContent=n,a}createSpan(t,e){const n=document.createElement("span");return n.classList.add(t),n.textContent=e,n}},i=class{constructor(){this.template=new n}createPagination(t,e,n,i){const a=document.createElement("div");a.classList.add("pagination");const r=document.createElement("h3");r.classList.add("pagination__page");const c=t();r.textContent=`Page #${c}`;const o=this.createButtons(t,e,n,i);return a.append(r,...o),a}createButtons(t,e,n,i){const a=t(),r=e(),c=this.template.createBtn("pagination__prev","btn","Prev"),o=this.template.createBtn("pagination__next","btn","Next");return a*r>=n&&(o.disabled=!0),a<=1&&(c.disabled=!0),this.onClickHandlerPrev(c,t,i),this.onClickHandlerNext(o,t,e,n,i),[c,o]}onClickHandlerPrev(t,e,n){t.addEventListener("click",(()=>{let t=e();t>1&&(t-=1,n(t))}))}onClickHandlerNext(t,e,n,i,a){t.addEventListener("click",(()=>{let t=e();t*n()<i&&(t+=1,a(t))}))}};var a=function(t,e,n,i){return new(n||(n=Promise))((function(a,r){function c(t){try{s(i.next(t))}catch(t){r(t)}}function o(t){try{s(i.throw(t))}catch(t){r(t)}}function s(t){var e;t.done?a(t.value):(e=t.value,e instanceof n?e:new n((function(t){t(e)}))).then(c,o)}s((i=i.apply(t,e||[])).next())}))};var r=function(t,e,n,i){return new(n||(n=Promise))((function(a,r){function c(t){try{s(i.next(t))}catch(t){r(t)}}function o(t){try{s(i.throw(t))}catch(t){r(t)}}function s(t){var e;t.done?a(t.value):(e=t.value,e instanceof n?e:new n((function(t){t(e)}))).then(c,o)}s((i=i.apply(t,e||[])).next())}))};var c=function(t,e,n,i){return new(n||(n=Promise))((function(a,r){function c(t){try{s(i.next(t))}catch(t){r(t)}}function o(t){try{s(i.throw(t))}catch(t){r(t)}}function s(t){var e;t.done?a(t.value):(e=t.value,e instanceof n?e:new n((function(t){t(e)}))).then(c,o)}s((i=i.apply(t,e||[])).next())}))};const o=new class{constructor(){this.controller=new e,this.garage=new class{constructor(){this.controller=new e,this.template=new n,this.pagination=new i}createGarage(t,e,n,i,a){const r=document.createElement("div");r.classList.add("garage__wrap");const c=this.createTitles(n),o=this.pagination.createPagination(i,a,n,e);return r.append(c,o),t.map((t=>{const n=this.createContainer(t,e),i=this.createImages(t);r.append(n,i)})),r}createTitles(t){const e=document.createElement("h2");return e.classList.add("garage__title"),e.textContent=`Garage (${t})`,e}createContainer(t,e){const n=document.createElement("div");n.classList.add("garage__container");const i=this.createButtons(t,e),a=this.createNameAuto(t.name),r=this.controlAuto(t);return n.append(i,a,r),n}createButtons(t,e){const n=document.createElement("div");n.classList.add("garage__buttons");const i=this.template.createBtn("garage__btn-select","btn","Select");this.onClickHandlerSelect(i,t);const a=this.template.createBtn("garage__btn-remove","btn","Remove");return this.onClickHandlerRemove(a,t.id,e),n.append(i,a),n}onClickHandlerRemove(t,e,n){t.addEventListener("click",(()=>{this.deleteCar(e,n),this.deleteWinner(e)}))}onClickHandlerSelect(t,e){t.addEventListener("click",(()=>{const t=document.querySelector(".update-cars__name"),n=document.querySelector(".update-cars__color"),i=document.querySelector(".update-cars__id"),a=document.querySelector(".update-cars__btn");t&&n&&i&&a&&(t.value=e.name,n.value=e.color,i.value=e.id.toString(),a.disabled=!1)}))}deleteCar(t,e){return a(this,void 0,void 0,(function*(){yield this.controller.deleteCar(t),e()}))}deleteWinner(t){return a(this,void 0,void 0,(function*(){yield this.controller.deleteWinner(t)}))}createNameAuto(t){const e=document.createElement("span");return e.classList.add("garage__name-auto"),e.textContent=t,e}controlAuto(t){const e=document.createElement("div");e.classList.add("control-auto");const n=this.template.createBtn("control-auto__run","btn-control","A");n.addEventListener("click",(()=>{this.controller.startCar(t,n,i)}));const i=this.template.createBtn("control-auto__stop","btn-control","B");return i.disabled=!0,i.addEventListener("click",(()=>{this.controller.stopCar(t,n,i)})),e.append(n,i),e}createImages(t){const e=document.createElement("div");e.classList.add("garage__images");const n=this.createCarImg(t),i=this.createBlockImg("garage__img-finish");return e.append(n,i),e}createBlockImg(t){const e=document.createElement("div");return e.classList.add(t),e}createCarImg(t){const e=document.createElement("div");return e.id=t.id.toString(),e.classList.add("garage__img-auto"),e.innerHTML=`<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 1280 640" preserveAspectRatio="xMidYMid meet" xmlns:v="https://vecta.io/nano"><g fill="${t.color}" stroke="none"><path d="M356.5 106.4c-10.6 3-10.1 2.6-10.8 11.1-.4 4.2-.9 8-1.2 8.5-.6 1-24.6 10.5-59 23.4-44.8 16.7-105.2 41.5-117.3 48.3-7.8 4.3-19.3 9.1-25 10.4-2.3.5-9.8 1.4-16.5 1.9-6.7.6-16.7 1.9-22.2 3-15.4 3.1-34 4.9-56.3 5.7l-20.3.6-4.3 6.6c-5.9 9.1-6 9.5-2.6 13 3.7 3.7 3.8 6.5.3 15-2.5 6.2-2.7 7.8-3.1 25.6l-.4 19-3.8 3.2C4.9 309.5.7 322.6.6 343.5c0 19.4 1.1 39.6 2.6 48.2 1.3 7.1 1.4 7.4 7.2 12.2 6.9 5.8 13 12.9 15.8 18.4 6.4 12.6 53.4 21.1 138.4 25l9.2.4-.6-11.9c-.6-14.2.8-25.6 4.9-38.3 11.2-35.2 39.4-62.2 75.6-72.2 9-2.6 11.2-2.8 27.8-2.8 16.5 0 18.8.2 27.8 2.7 20.1 5.6 36.1 15.2 50.4 30.2 14 14.5 22.2 29.3 27.4 49.2 2.1 7.9 2.4 10.9 2.3 27.9-.1 12.7-.6 21.4-1.6 26.3l-1.5 7.3 300.6-.7 300.9-.9c.1-.1-.8-3.7-2-8.1-1.9-6.7-2.2-10.5-2.2-25.9-.1-16.6.1-18.7 2.7-27.9 11.7-42.1 46.7-73.6 88.5-79.7 11.9-1.7 32.5-.7 43.2 2.1 23.9 6.3 45.3 20.5 60.1 39.9 7 9.2 15.4 26.7 18.5 38.6 2.4 8.8 2.7 11.9 2.7 26 .1 11.6-.4 18.1-1.6 23.4-1 4.1-1.6 7.5-1.5 7.6.2.1 6.2-.2 13.3-.6 26.6-1.6 45.8-4.5 52.5-7.9 4.8-2.4 9.7-8.1 12.7-14.6l2.4-5.2-1.6-15.7c-1.5-15.2-1.5-16.3.4-28.4 6.3-38.8 5-68-3.5-80.2-13.4-19.3-52.6-33.6-142.9-51.9-73.7-14.9-132.2-20.9-203.3-21-22.8 0-22.6 0-34.7-8.5-18.7-13.1-104.5-60.7-147.1-81.5-38.3-18.7-78.8-28.1-143.9-33.2-20.8-1.7-110.6-1.6-140 0l-43 2.7c-30.2 2.2-28.6 2.2-34.1-1-14-8.1-18.7-9.4-26.9-7.1zM545 139.7l7.1 44.6 7.5 47.4c.9 5.2 1.5 9.6 1.3 9.7-1.1.9-169.9-2.9-195.1-4.4-20.6-1.3-41.7-3.6-48.5-5.4-9.8-2.6-19.8-11.9-24.9-23.1-3.5-7.5-3.6-17.2-.5-25.5 1.7-4.5 3-6.1 6.8-8.6 8.3-5.4 13.5-8 25.3-12.7 34.1-13.6 85.8-23 146-26.7 26.9-1.6 27-1.6 51.1-1.8l22.7-.2 1.2 6.7zm63-4.7c26.4 1.8 77.7 11 102.9 18.6 18.6 5.6 44.5 18.8 75.6 38.7 21.1 13.4 27.4 18.1 25 18.5-7.5 1.2-13.3 5-16.2 10.6-1.9 3.5-2.1 13.6-.4 17.9l1.1 2.7-90.7-.2-90.6-.3-5.9-16c-11-30.2-29.8-87.8-29.8-91.6 0-.6 9.5-.2 29 1.1zM263.3 327.5c-22.3 4-41 14.1-56.8 30.6-13.2 13.8-21.3 28.3-26.2 46.7-2.2 8.3-2.6 11.9-2.6 24.7-.1 16.9 1 23.6 6.5 38.2 8.7 23 27.1 43.6 49.3 55.1 8.5 4.4 17.8 7.8 27.1 9.8 10.7 2.3 31.2 2.3 41.9-.1 39.2-8.4 69.9-37.5 80.2-76.1 2.3-8.6 2.6-12 2.7-25.4.1-15.8-.5-19.9-4.6-33-9.8-31-35.5-56.7-66.8-66.9-15-5-35.4-6.4-50.7-3.6zm35 30.1c24.9 5.6 45.7 24.7 54.3 49.9 2.5 7.2 2.8 9.5 2.8 22 .1 15.3-1.5 22.8-7.4 34.5-9.4 18.6-28.3 33.7-48.5 38.6-9.6 2.4-26.8 2.4-36 0-32-8.4-54.4-35.5-56.2-68.1-2-35.9 20.9-67.3 55.8-76.5 9.4-2.4 25.3-2.6 35.2-.4zM260 370.3c-3.6 1.3-8.5 3.6-10.9 5.1l-4.4 2.8 11.6 11.5c8.1 8.2 12 11.4 13.1 11 1.4-.6 1.6-2.9 1.6-16.7 0-18.6.6-17.8-11-13.7zm32 13.6c0 13.9.2 16.2 1.6 16.8 1.1.4 5-2.8 13-10.8l11.5-11.4-2.8-2.2c-3.4-2.8-13.8-7-19.3-7.9l-4-.7v16.2zm-63.8 11.3c-2.8 3.6-9.2 19.1-9.2 22.5 0 1 3.4 1.3 16.5 1.3 15.1 0 16.5-.1 16.5-1.8 0-1.5-20.6-23.2-22.1-23.2-.4 0-1.1.6-1.7 1.2zm94 9.7c-6.2 5.9-11.2 11.5-11.2 12.4 0 1.5 1.7 1.7 16.5 1.7 13.1 0 16.5-.3 16.5-1.3 0-4-6.9-20.5-9.5-22.7-.7-.6-4.8 2.7-12.3 9.9zm-44.1 1.9c-1.2 2.2 1.1 6.2 3.4 6.2.8 0 2.1-1 2.9-2.2 2-2.8.4-5.8-2.9-5.8-1.3 0-2.9.8-3.4 1.8zm-3.2 17.1c-3.2 3.3-3.7 6.7-1.4 11 2.9 5.7 10.4 6.4 15.1 1.4 5.3-5.7.9-15.3-7.1-15.3-2.7 0-4.4.8-6.6 2.9zm-17.9 3.6c-2.6 3.2 1.3 8.1 4.8 5.9 2.4-1.6 2.7-4.5.6-6.1-2.3-1.7-3.9-1.6-5.4.2zm43.6.1c-2 1.9-2 3.8-.2 5.4 2.3 1.9 6.1.8 6.4-1.8.7-4.4-3.2-6.7-6.2-3.6zM219 442.5c0 2.9 4.1 14 7.2 19.4l3.1 5.3 11.7-11.7c7.1-7.1 11.6-12.3 11.3-13.1-.4-1.1-4-1.4-16.9-1.4-14.1 0-16.4.2-16.4 1.5zm92 .3c0 .9 5.1 6.8 11.4 13.1l11.4 11.4 3.1-5.4c3-5.1 7.1-16.5 7.1-19.5 0-1.1-3.1-1.4-16.5-1.4-15.1 0-16.5.1-16.5 1.8zm-33 7.1c-.7 1.5-.5 2.4.8 4.1 3.2 4 8.5.4 6.2-4.1-1.4-2.5-5.6-2.5-7 0zm-21.8 20.4c-6.1 6.2-11.2 11.5-11.2 11.9 0 1.8 20.8 10.8 24.9 10.8.7 0 1.1-5.4 1.1-16.4 0-14-.2-16.5-1.6-17-.9-.3-1.6-.6-1.7-.6s-5.3 5.1-11.5 11.3zm37.1-10.6c-1.5.6-1.9 33.3-.4 33.3 4.6 0 25.1-8.8 25.1-10.8 0-.9-22.3-23.2-23-23.1-.3 0-1.1.3-1.7.6zM1070 328.1c-39 8.4-69.6 37.6-79.7 75.9-3.1 11.7-4.1 29.2-2.4 41.1 3.3 22.7 15 45.3 31.8 60.9 26.7 25 64.3 34.4 99.3 24.9 11.7-3.2 28.3-11.8 38-19.6 48.7-39.6 51.8-112.8 6.7-156-9.7-9.3-16.6-14-29-19.8-13.7-6.4-23.5-8.6-40.7-9.1-12-.3-16.2 0-24 1.7zm44.5 31.3c23.8 8.1 40.9 25.8 48.6 50.6 3 9.6 3.3 28.9.5 38.8-11 40-51.3 63.7-91.1 53.6-14.9-3.8-31.3-14.7-40.2-26.7-17.6-23.8-20.3-53.3-7.1-79.7 3.4-6.9 6-10.3 13.8-18 7.7-7.8 11.1-10.4 18.1-13.9 12.9-6.5 20.7-8.1 36.4-7.7 10.9.3 14.3.7 21 3zm-44.2 10.6c-5.4 1.9-15.3 7.1-15.3 8 0 .3 5.1 5.7 11.4 11.9 8 8 11.9 11.2 13 10.8 1.4-.5 1.6-2.9 1.6-16.7v-16l-2.7.1c-1.6 0-5.2.9-8 1.9zm31.7 13.9c0 13.9.2 16.2 1.6 16.8 2.2.8 24.7-21.6 23.4-23.2-1.7-2-16.3-8.4-20.7-9.1l-4.3-.7v16.2zm-65.4 13.7c-2.9 4.4-7.6 16.5-7.6 19.4 0 1.9.7 2 16.5 2 12.6 0 16.5-.3 16.5-1.3 0-.7-5.1-6.3-11.4-12.6l-11.4-11.4-2.6 3.9zm94.7 7.6c-6.1 6.2-10.9 11.9-10.6 12.5.6 1.5 33.3 1.9 33.3.4 0-4.5-8.8-24.1-10.8-24.1-.4 0-5.7 5.1-11.9 11.2zm-43.1 1c-1.7 1.7-1.5 3.2.7 5.2 1.6 1.4 2.3 1.5 4.1.6 3.1-1.7 2.4-6.4-1-6.8-1.4-.2-3.1.3-3.8 1zm-3.6 17.9c-6.8 8.1 1.7 19.4 11 14.4 8.9-4.8 5.6-17.5-4.6-17.5-3 0-4.4.6-6.4 3.1zm-17.6 3.3c-1.9 2.3-.8 6.1 1.8 6.4 4.4.7 6.7-3.2 3.6-6.2-1.9-2-3.8-2-5.4-.2zm43.6-.1c-2.1 1.6-1.8 4.5.7 6.1 3.7 2.3 7.7-3.5 4.1-6.1-1-.7-2.1-1.3-2.4-1.3s-1.4.6-2.4 1.3zM1029 443c0 2.9 4.3 14.1 7.4 19.5l2.8 4.8 11.6-11.6c8.1-8.1 11.3-12 10.9-13.1-.6-1.4-2.9-1.6-16.7-1.6-15.2 0-16 .1-16 2zm91.7-.8c-.3.7 4.7 6.6 11.1 13l11.6 11.8 2.7-4.3c2.7-4.4 7.9-17.7 7.9-20.3 0-1.2-2.8-1.4-16.4-1.4-12.2 0-16.6.3-16.9 1.2zm-32.6 7.7c-1.4 2.5-.5 4.8 2 5.6 2.7.9 5.1-1.3 4.7-4.4-.4-3.4-5.1-4.3-6.7-1.2zm-21.9 20.4c-6.1 6.2-11.2 11.5-11.2 11.9 0 2 20.1 10.8 24.7 10.8 1 0 1.3-3.4 1.3-16.4 0-14-.2-16.5-1.6-17-.9-.3-1.6-.6-1.7-.6s-5.3 5.1-11.5 11.3zm37.1-10.6c-1 .3-1.3 4.7-1.3 16.9 0 9 .4 16.4.8 16.4 3.6 0 18.6-6.1 23.9-9.8 1.6-1-21.6-24.2-23.4-23.5z"/></g></svg>`,e}},this.controlPanel=new class{constructor(){this.controller=new e,this.isWin=!1,this.timeoutsID={}}createControlPanel(t,e,n){const i=document.createElement("section");i.classList.add("control-panel");const a=this.createTitle(),r=this.createBlockCreateCars(t),c=this.createBlockUpdateCars(t),o=this.createButtonsBlock(e,n,t);return i.append(a,r,c,o),i}createTitle(){const t=document.createElement("h2");return t.classList.add("control-panel__title"),t.textContent="Control panel cars",t}createBlockCreateCars(t){const e=document.createElement("div");e.classList.add("create-cars");const n=this.createInputName("create-cars__name","text","input"),i=this.createInputColor("create-cars__color","color","#f6b73c"),a=this.createBtn("create-cars__btn","btn","btn--panel","Create");return n.addEventListener("change",(()=>{localStorage.setItem("createName",n.value)})),i.addEventListener("change",(()=>{localStorage.setItem("createColor",i.value)})),this.addValueInput("createName",n),this.addValueInput("createColor",i),this.onClickHandlerCreate(a,t),e.append(n,i,a),e}onClickHandlerCreate(t,e){t.addEventListener("click",(()=>{const t=document.querySelector(".create-cars__name"),n=document.querySelector(".create-cars__color");if(t&&n){const i=t.value,a=n.value;console.log(i,a),this.createCar(i,a,e)}}))}createCar(t,e,n){return r(this,void 0,void 0,(function*(){(yield this.controller.createCar(t,e))&&n()}))}createBlockUpdateCars(t){const e=document.createElement("div");e.classList.add("update-cars");const n=this.createInputName("update-cars__name","text","input"),i=this.createInputColor("update-cars__color","color","#f6b73c");n.addEventListener("change",(()=>{localStorage.setItem("updateName",n.value)})),i.addEventListener("change",(()=>{localStorage.setItem("updateColor",i.value)})),this.addValueInput("updateName",n),this.addValueInput("updateColor",i);const a=this.createInputName("update-cars__id","text","input"),r=this.createBtn("update-cars__btn","btn","btn--panel","Update",!0);return this.onClickHandlerUpdate(r,t),e.append(a,n,i,r),e}onClickHandlerUpdate(t,e){t.addEventListener("click",(()=>{const t=document.querySelector(".update-cars__name"),n=document.querySelector(".update-cars__color"),i=document.querySelector(".update-cars__id");t&&n&&i&&this.updateCar(Number(i.value),t.value,n.value,e)}))}updateCar(t,e,n,i){return r(this,void 0,void 0,(function*(){(yield this.controller.updateCar(t,e,n))&&i()}))}createButtonsBlock(t,e,n){const i=document.createElement("div");i.classList.add("control-panel__buttons");const a=this.createBtn("control-panel__race","btn","btn--panel","Race"),r=this.createBtn("control-panel__reset","btn","btn--panel","Reset");!1===this.isWin&&(r.disabled=!0),this.onClickHandlerRace(a,r,t,e),this.onClickHandlerReset(a,r,t,e,n);const c=this.createBtn("control-panel__generate","btn","btn--panel","Generate cars");return this.onClickHandlerGenerate(c,n),i.append(a,r,c),i}onClickHandlerGenerate(t,e){t.addEventListener("click",(()=>{for(let t=0;t<100;t++){const t=this.getRandomCarsName(),n=this.getRandomCarsModel(),i=this.getRandomColorCars();this.createCar(t+" "+n,i,e)}}))}getRandomCarsName(){const t=Math.ceil(0),e=Math.floor(14);return["Tesla","Ford","BMW","Mercedes","Opel","Porsche","Audi","Honda","Hyundai","Kia","Mazda","Acura","Citroen","Lexus","Skoda"][Math.floor(Math.random()*(e-t+1))+t]}getRandomCarsModel(){const t=Math.ceil(0),e=Math.floor(14);return["Model S","Mondeo","iX M60","GLA","Zafira Life","Cayman","Q7","Accord","Tucson","Ceed","CX-9","MDX","C5 AIRCROSS","RX","Octavia"][Math.floor(Math.random()*(e-t+1))+t]}getRandomColorCars(){const t=Math.ceil(0),e=Math.floor(14),n=Math.floor(Math.random()*(e-t+1))+t;return console.log(n),["#ff0099","\t#ff0033","#0033ff","#00ffcc","#33cc00","#33cc99","#663399","#ff6666","#ffff00","#990000","#ffcccc","#006633","#666600","#003399","#cc66cc"][n]}onClickHandlerRace(t,e,n,i){t.addEventListener("click",(()=>{t.disabled=!0,this.startRace(n,i),this.changeDisabledBtn(!0,!1)}))}onClickHandlerReset(t,e,n,i,a){e.addEventListener("click",(()=>{this.stopCar(t,e,n,i),this.clearTimers(this.timeoutsID),a(),this.isWin=!1}))}changeDisabledBtn(t,e){const n=document.querySelectorAll(".control-auto__run"),i=document.querySelectorAll(".control-auto__stop"),a=Array.prototype.slice.call(n),r=Array.prototype.slice.call(i);a&&r&&(a.forEach((e=>{e.disabled=t})),r.forEach((t=>{t.disabled=e})))}startRace(t,e){return r(this,void 0,void 0,(function*(){const n=yield this.getAutos(t(),e());n&&n.forEach((t=>{this.startAuto(t,this.timeoutsID)}))}))}getAutos(t,e){return r(this,void 0,void 0,(function*(){return yield this.controller.getAutosId(t,e)}))}startAuto(t,e){return r(this,void 0,void 0,(function*(){const n=yield this.controller.startEngine(t.id);n&&(this.startAnimation(n,t.id),this.startTimer(t,e,n),(yield this.controller.startDrive(t.id))||(this.clearTimerByID(e,t.id),this.stopAnimation(t.id)))}))}clearTimers(t){for(const e in t)clearTimeout(t[e]);t={}}clearTimerByID(t,e){for(const n in t)n==e.toString()&&clearTimeout(t[n])}startTimer(t,e,n){const i=window.setTimeout((()=>{this.setWinner(t.id,t.name,Math.round(n/10)/100),this.clearTimers(e)}),n);e[t.id]=i}startAnimation(t,e){const n=document.getElementById(e.toString());n&&(n.classList.add("animation-active"),n.style.animationDuration=t/1e3+"s")}stopAnimation(t){const e=document.getElementById(t.toString());if(!e)return;const n=e.getBoundingClientRect().left;e.style.left=n+"px",e.classList.remove("animation-active")}stopCar(t,e,n,i){return r(this,void 0,void 0,(function*(){const a=n(),r=i(),c=yield this.controller.getAutosId(a,r);c&&c.forEach((n=>{this.controller.stopCar(n,t,e)}))}))}setWinner(t,e,n){if(this.isWin)return;const i=document.querySelector(".winner-modal__name"),a=document.querySelector(".winner-modal__time"),r=document.getElementById("modal-winner");if(i&&a&&r){r.classList.add("modal--open"),i.textContent=`${e} Winner!`,a.textContent=`(${n+"s"})!`;const t=document.querySelector(".control-panel__reset");t&&(t.disabled=!1)}this.isWin=!0,this.controller.createWinner(t,n)}createInputName(t,e,n){const i=document.createElement("input");return i.classList.add(t),n&&i.classList.add(n),i.type=e,i}createInputColor(t,e,n){const i=document.createElement("input");return i.classList.add(t),i.value=n,i.type=e,i}addValueInput(t,e){const n=localStorage.getItem(t);n&&(e.value=n)}createBtn(t,e,n,i,a){const r=document.createElement("button");return r.classList.add(t),r.classList.add(e),r.classList.add(n),a&&(r.disabled=a),r.textContent=i,r}},this.page=1,this.limitCars=7,this.modal=new class{constructor(){this.template=new n}createModal(){const t=document.createElement("div");t.classList.add("modal"),t.id="modal-winner";const e=this.createWinnerBlock("","");return t.append(e),this.onClickHandlerModal(t),t}onClickHandlerModal(t){t.addEventListener("click",(()=>{const t=document.querySelector(".modal--open");t&&t.classList.remove("modal--open")}))}createWinnerBlock(t,e){const n=document.createElement("div");n.classList.add("winner-modal");const i=this.template.createSpan("winner-modal__name",t),a=this.template.createSpan("winner-modal__time",e);return n.append(i,a),n}}}draw(){const t=document.querySelector("main");if(!t)return;t.classList.add("main"),t.textContent="";const e=this.modal.createModal();t.append(e);const n=this.controlPanel.createControlPanel(this.drawGarage.bind(this),this.getPage.bind(this),this.getLimitCars.bind(this));t.append(n),this.drawGarage()}drawGarage(t){return e=this,n=void 0,a=function*(){t&&(this.page=t);const e=yield this.controller.getAutos(this.page,this.limitCars);if(!e)return;const n=this.garage.createGarage(e.autos,this.drawGarage.bind(this),e.countCars,this.getPage.bind(this),this.getLimitCars.bind(this));let i=document.querySelector(".garage");i?i.textContent="":(i=document.createElement("section"),i.classList.add("garage")),i.append(n);const a=document.querySelector(".main");a&&a.append(i)},new((i=void 0)||(i=Promise))((function(t,r){function c(t){try{s(a.next(t))}catch(t){r(t)}}function o(t){try{s(a.throw(t))}catch(t){r(t)}}function s(e){var n;e.done?t(e.value):(n=e.value,n instanceof i?n:new i((function(t){t(n)}))).then(c,o)}s((a=a.apply(e,n||[])).next())}));var e,n,i,a}getPage(){return this.page}getLimitCars(){return this.limitCars}},s=new class{constructor(){this.pagination=new i,this.controller=new e,this.page=1,this.numberTable=0,this.limitWinners=10,this.sort="",this.direction="ASC"}drawPage(){this.draw()}draw(t){return c(this,void 0,void 0,(function*(){t&&(this.page=t);const e=document.querySelector("main");if(!e)return;e.classList.add("main"),e.textContent="";const n=document.createElement("section");n.classList.add("winners");const i=yield this.controller.getWinners(this.page,this.limitWinners,this.sort,this.direction),a=this.createTitle(null==i?void 0:i.countWinners),r=this.createPagination(i),c=yield this.createWinnersTable(i);r&&n.append(a,r,c),e.append(n)}))}setSort(t){t===this.sort?this.direction="ASC"===this.direction?"DESC":"ASC":(this.sort=t,this.direction="ASC"),this.draw()}createTitle(t){const e=document.createElement("h2");return e.classList.add("winners__title"),e.textContent=`Winners (${t||0})`,e}createPagination(t){if(t)return this.pagination.createPagination(this.getPage.bind(this),this.getLimitWinners.bind(this),t.countWinners,this.draw.bind(this))}createWinnersTable(t){return c(this,void 0,void 0,(function*(){const e=document.createElement("table");e.classList.add("winners__table");const n=this.createColumnsBlock();e.append(n);const i=yield this.controller.getAutosAll();return t&&i&&t.winners.forEach(((t,n)=>{const a=i.find((e=>e.id===t.id));if(a){const i=this.createRowsBlock((this.page-1)*this.limitWinners+(n+1),a.name,t.wins,t.time,a.color);e.append(i)}})),e}))}createColumnsBlock(){const t=document.createElement("tr");t.classList.add("winners__columns");const e=[{id:"number",title:"Number"},{id:"car",title:"Car"},{id:"name",title:"Name"},{id:"wins",title:"Wins"},{id:"time",title:"Best time (seconds)"}].map((t=>this.createColumn(t)));return t.append(...e),t}createColumn(t){const e=document.createElement("th");if(["wins","time"].includes(t.id)&&(e.addEventListener("click",(()=>{this.setSort(t.id)})),e.classList.add("is-sort"),t.id===this.sort)){const t="ASC"===this.direction?"sort-asc":"sort-desc";e.classList.add(t)}return e.textContent=t.title,e}createRowsBlock(t,e,n,i,a){const r=document.createElement("tr");r.classList.add("winners__rows");const c=this.createRow(t.toString(),"winners__number"),o=this.createRow(`<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 1280 640" preserveAspectRatio="xMidYMid meet" xmlns:v="https://vecta.io/nano"><g fill="${a}" stroke="none"><path d="M356.5 106.4c-10.6 3-10.1 2.6-10.8 11.1-.4 4.2-.9 8-1.2 8.5-.6 1-24.6 10.5-59 23.4-44.8 16.7-105.2 41.5-117.3 48.3-7.8 4.3-19.3 9.1-25 10.4-2.3.5-9.8 1.4-16.5 1.9-6.7.6-16.7 1.9-22.2 3-15.4 3.1-34 4.9-56.3 5.7l-20.3.6-4.3 6.6c-5.9 9.1-6 9.5-2.6 13 3.7 3.7 3.8 6.5.3 15-2.5 6.2-2.7 7.8-3.1 25.6l-.4 19-3.8 3.2C4.9 309.5.7 322.6.6 343.5c0 19.4 1.1 39.6 2.6 48.2 1.3 7.1 1.4 7.4 7.2 12.2 6.9 5.8 13 12.9 15.8 18.4 6.4 12.6 53.4 21.1 138.4 25l9.2.4-.6-11.9c-.6-14.2.8-25.6 4.9-38.3 11.2-35.2 39.4-62.2 75.6-72.2 9-2.6 11.2-2.8 27.8-2.8 16.5 0 18.8.2 27.8 2.7 20.1 5.6 36.1 15.2 50.4 30.2 14 14.5 22.2 29.3 27.4 49.2 2.1 7.9 2.4 10.9 2.3 27.9-.1 12.7-.6 21.4-1.6 26.3l-1.5 7.3 300.6-.7 300.9-.9c.1-.1-.8-3.7-2-8.1-1.9-6.7-2.2-10.5-2.2-25.9-.1-16.6.1-18.7 2.7-27.9 11.7-42.1 46.7-73.6 88.5-79.7 11.9-1.7 32.5-.7 43.2 2.1 23.9 6.3 45.3 20.5 60.1 39.9 7 9.2 15.4 26.7 18.5 38.6 2.4 8.8 2.7 11.9 2.7 26 .1 11.6-.4 18.1-1.6 23.4-1 4.1-1.6 7.5-1.5 7.6.2.1 6.2-.2 13.3-.6 26.6-1.6 45.8-4.5 52.5-7.9 4.8-2.4 9.7-8.1 12.7-14.6l2.4-5.2-1.6-15.7c-1.5-15.2-1.5-16.3.4-28.4 6.3-38.8 5-68-3.5-80.2-13.4-19.3-52.6-33.6-142.9-51.9-73.7-14.9-132.2-20.9-203.3-21-22.8 0-22.6 0-34.7-8.5-18.7-13.1-104.5-60.7-147.1-81.5-38.3-18.7-78.8-28.1-143.9-33.2-20.8-1.7-110.6-1.6-140 0l-43 2.7c-30.2 2.2-28.6 2.2-34.1-1-14-8.1-18.7-9.4-26.9-7.1zM545 139.7l7.1 44.6 7.5 47.4c.9 5.2 1.5 9.6 1.3 9.7-1.1.9-169.9-2.9-195.1-4.4-20.6-1.3-41.7-3.6-48.5-5.4-9.8-2.6-19.8-11.9-24.9-23.1-3.5-7.5-3.6-17.2-.5-25.5 1.7-4.5 3-6.1 6.8-8.6 8.3-5.4 13.5-8 25.3-12.7 34.1-13.6 85.8-23 146-26.7 26.9-1.6 27-1.6 51.1-1.8l22.7-.2 1.2 6.7zm63-4.7c26.4 1.8 77.7 11 102.9 18.6 18.6 5.6 44.5 18.8 75.6 38.7 21.1 13.4 27.4 18.1 25 18.5-7.5 1.2-13.3 5-16.2 10.6-1.9 3.5-2.1 13.6-.4 17.9l1.1 2.7-90.7-.2-90.6-.3-5.9-16c-11-30.2-29.8-87.8-29.8-91.6 0-.6 9.5-.2 29 1.1zM263.3 327.5c-22.3 4-41 14.1-56.8 30.6-13.2 13.8-21.3 28.3-26.2 46.7-2.2 8.3-2.6 11.9-2.6 24.7-.1 16.9 1 23.6 6.5 38.2 8.7 23 27.1 43.6 49.3 55.1 8.5 4.4 17.8 7.8 27.1 9.8 10.7 2.3 31.2 2.3 41.9-.1 39.2-8.4 69.9-37.5 80.2-76.1 2.3-8.6 2.6-12 2.7-25.4.1-15.8-.5-19.9-4.6-33-9.8-31-35.5-56.7-66.8-66.9-15-5-35.4-6.4-50.7-3.6zm35 30.1c24.9 5.6 45.7 24.7 54.3 49.9 2.5 7.2 2.8 9.5 2.8 22 .1 15.3-1.5 22.8-7.4 34.5-9.4 18.6-28.3 33.7-48.5 38.6-9.6 2.4-26.8 2.4-36 0-32-8.4-54.4-35.5-56.2-68.1-2-35.9 20.9-67.3 55.8-76.5 9.4-2.4 25.3-2.6 35.2-.4zM260 370.3c-3.6 1.3-8.5 3.6-10.9 5.1l-4.4 2.8 11.6 11.5c8.1 8.2 12 11.4 13.1 11 1.4-.6 1.6-2.9 1.6-16.7 0-18.6.6-17.8-11-13.7zm32 13.6c0 13.9.2 16.2 1.6 16.8 1.1.4 5-2.8 13-10.8l11.5-11.4-2.8-2.2c-3.4-2.8-13.8-7-19.3-7.9l-4-.7v16.2zm-63.8 11.3c-2.8 3.6-9.2 19.1-9.2 22.5 0 1 3.4 1.3 16.5 1.3 15.1 0 16.5-.1 16.5-1.8 0-1.5-20.6-23.2-22.1-23.2-.4 0-1.1.6-1.7 1.2zm94 9.7c-6.2 5.9-11.2 11.5-11.2 12.4 0 1.5 1.7 1.7 16.5 1.7 13.1 0 16.5-.3 16.5-1.3 0-4-6.9-20.5-9.5-22.7-.7-.6-4.8 2.7-12.3 9.9zm-44.1 1.9c-1.2 2.2 1.1 6.2 3.4 6.2.8 0 2.1-1 2.9-2.2 2-2.8.4-5.8-2.9-5.8-1.3 0-2.9.8-3.4 1.8zm-3.2 17.1c-3.2 3.3-3.7 6.7-1.4 11 2.9 5.7 10.4 6.4 15.1 1.4 5.3-5.7.9-15.3-7.1-15.3-2.7 0-4.4.8-6.6 2.9zm-17.9 3.6c-2.6 3.2 1.3 8.1 4.8 5.9 2.4-1.6 2.7-4.5.6-6.1-2.3-1.7-3.9-1.6-5.4.2zm43.6.1c-2 1.9-2 3.8-.2 5.4 2.3 1.9 6.1.8 6.4-1.8.7-4.4-3.2-6.7-6.2-3.6zM219 442.5c0 2.9 4.1 14 7.2 19.4l3.1 5.3 11.7-11.7c7.1-7.1 11.6-12.3 11.3-13.1-.4-1.1-4-1.4-16.9-1.4-14.1 0-16.4.2-16.4 1.5zm92 .3c0 .9 5.1 6.8 11.4 13.1l11.4 11.4 3.1-5.4c3-5.1 7.1-16.5 7.1-19.5 0-1.1-3.1-1.4-16.5-1.4-15.1 0-16.5.1-16.5 1.8zm-33 7.1c-.7 1.5-.5 2.4.8 4.1 3.2 4 8.5.4 6.2-4.1-1.4-2.5-5.6-2.5-7 0zm-21.8 20.4c-6.1 6.2-11.2 11.5-11.2 11.9 0 1.8 20.8 10.8 24.9 10.8.7 0 1.1-5.4 1.1-16.4 0-14-.2-16.5-1.6-17-.9-.3-1.6-.6-1.7-.6s-5.3 5.1-11.5 11.3zm37.1-10.6c-1.5.6-1.9 33.3-.4 33.3 4.6 0 25.1-8.8 25.1-10.8 0-.9-22.3-23.2-23-23.1-.3 0-1.1.3-1.7.6zM1070 328.1c-39 8.4-69.6 37.6-79.7 75.9-3.1 11.7-4.1 29.2-2.4 41.1 3.3 22.7 15 45.3 31.8 60.9 26.7 25 64.3 34.4 99.3 24.9 11.7-3.2 28.3-11.8 38-19.6 48.7-39.6 51.8-112.8 6.7-156-9.7-9.3-16.6-14-29-19.8-13.7-6.4-23.5-8.6-40.7-9.1-12-.3-16.2 0-24 1.7zm44.5 31.3c23.8 8.1 40.9 25.8 48.6 50.6 3 9.6 3.3 28.9.5 38.8-11 40-51.3 63.7-91.1 53.6-14.9-3.8-31.3-14.7-40.2-26.7-17.6-23.8-20.3-53.3-7.1-79.7 3.4-6.9 6-10.3 13.8-18 7.7-7.8 11.1-10.4 18.1-13.9 12.9-6.5 20.7-8.1 36.4-7.7 10.9.3 14.3.7 21 3zm-44.2 10.6c-5.4 1.9-15.3 7.1-15.3 8 0 .3 5.1 5.7 11.4 11.9 8 8 11.9 11.2 13 10.8 1.4-.5 1.6-2.9 1.6-16.7v-16l-2.7.1c-1.6 0-5.2.9-8 1.9zm31.7 13.9c0 13.9.2 16.2 1.6 16.8 2.2.8 24.7-21.6 23.4-23.2-1.7-2-16.3-8.4-20.7-9.1l-4.3-.7v16.2zm-65.4 13.7c-2.9 4.4-7.6 16.5-7.6 19.4 0 1.9.7 2 16.5 2 12.6 0 16.5-.3 16.5-1.3 0-.7-5.1-6.3-11.4-12.6l-11.4-11.4-2.6 3.9zm94.7 7.6c-6.1 6.2-10.9 11.9-10.6 12.5.6 1.5 33.3 1.9 33.3.4 0-4.5-8.8-24.1-10.8-24.1-.4 0-5.7 5.1-11.9 11.2zm-43.1 1c-1.7 1.7-1.5 3.2.7 5.2 1.6 1.4 2.3 1.5 4.1.6 3.1-1.7 2.4-6.4-1-6.8-1.4-.2-3.1.3-3.8 1zm-3.6 17.9c-6.8 8.1 1.7 19.4 11 14.4 8.9-4.8 5.6-17.5-4.6-17.5-3 0-4.4.6-6.4 3.1zm-17.6 3.3c-1.9 2.3-.8 6.1 1.8 6.4 4.4.7 6.7-3.2 3.6-6.2-1.9-2-3.8-2-5.4-.2zm43.6-.1c-2.1 1.6-1.8 4.5.7 6.1 3.7 2.3 7.7-3.5 4.1-6.1-1-.7-2.1-1.3-2.4-1.3s-1.4.6-2.4 1.3zM1029 443c0 2.9 4.3 14.1 7.4 19.5l2.8 4.8 11.6-11.6c8.1-8.1 11.3-12 10.9-13.1-.6-1.4-2.9-1.6-16.7-1.6-15.2 0-16 .1-16 2zm91.7-.8c-.3.7 4.7 6.6 11.1 13l11.6 11.8 2.7-4.3c2.7-4.4 7.9-17.7 7.9-20.3 0-1.2-2.8-1.4-16.4-1.4-12.2 0-16.6.3-16.9 1.2zm-32.6 7.7c-1.4 2.5-.5 4.8 2 5.6 2.7.9 5.1-1.3 4.7-4.4-.4-3.4-5.1-4.3-6.7-1.2zm-21.9 20.4c-6.1 6.2-11.2 11.5-11.2 11.9 0 2 20.1 10.8 24.7 10.8 1 0 1.3-3.4 1.3-16.4 0-14-.2-16.5-1.6-17-.9-.3-1.6-.6-1.7-.6s-5.3 5.1-11.5 11.3zm37.1-10.6c-1 .3-1.3 4.7-1.3 16.9 0 9 .4 16.4.8 16.4 3.6 0 18.6-6.1 23.9-9.8 1.6-1-21.6-24.2-23.4-23.5z"/></g></svg>`,"winners__car"),s=this.createRow(e,"winners__name"),l=this.createRow(n.toString(),"winners__wins"),d=this.createRow(i.toString(),"winners__time");return r.append(c,o,s,l,d),r}createRow(t,e){const n=document.createElement("td");return n.classList.add(e),n.innerHTML=t,n}getPage(){return this.page}getLimitWinners(){return this.limitWinners}},l=new class{constructor(){this.template=new n}drawElements(t){const e=document.querySelector("header");if(!e)return;e.classList.add("header");const n=this.createTitle(t),i=document.createElement("div");i.classList.add("header__buttons");const a=this.template.createBtn("header__btn-garage","btn","To Garage","btn--page"),r=this.template.createBtn("header__btn-winners","btn","To Winners","btn--page");this.onClickHandlerBtn(a,t,""),this.onClickHandlerBtn(r,t,"winners"),i.append(a,r),e.append(n,i)}onClickHandlerBtn(t,e,n){t.addEventListener("click",(()=>{e.navigate(n)}))}onClickHandlerTitle(t,e,n){t.addEventListener("click",(()=>{e.navigate(n)}))}createTitle(t){const e=document.createElement("h1");return e.classList.add("header__logo"),e.textContent="Async-Race",this.onClickHandlerTitle(e,t,""),e}},d=new class{constructor(t,e){this.navigate=t=>{window.history.pushState(null,"",this.root+t),this.action(t)},this.routes=t,this.root="/async-race1/",this.errorAction=e}init(){const t=window.location.pathname.replace(this.root,"");this.action(t.replace(/\/$/,"")),window.addEventListener("popstate",(t=>{this.action(window.location.pathname.replace(this.root,""))}))}action(t){const e=this.routes.find((e=>-1!==e.path.indexOf("/:")?e.path.replace(/\/:.+$/,"")===t.replace(/\/[\w]+$/,""):e.path===t));if(e){const n=this.getParam(t,e.path);e.cb(n)}else this.errorAction()}getParam(t,e){if(-1===e.indexOf("/:"))return;const n=t.match(/\/.+$/);let i;return n&&(i=n[0].replace("/","")),i}}([{path:"",cb:o.draw.bind(o)},{path:"winners",cb:s.drawPage.bind(s)}],o.draw.bind(o));l.drawElements(d),o.router=d,d.init()})();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,